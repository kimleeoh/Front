name: Push-to-EC2

on:
  push:
    branches:
      - server

jobs:
  deploy:
    name: Deploy to EC2 on server branch push
    runs-on: ubuntu-latest

    steps:
      # 1. 레포지토리 체크아웃 및 작업 디렉토리 설정
      - name: Checkout the files
        uses: actions/checkout@v3
        with:
          path: Front

      # 2. SSH 설정
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key_Amazon
          chmod 600 ~/.ssh/deploy_key_Amazon
          ssh-keyscan -H ${{ secrets.HOST_DNS }} >> ~/.ssh/known_hosts

      # 3. 캐시 클리어 후 빌드 작업
      - name: Clean npm cache and Build project
        run: |
          cd Front
          npm cache clean --force
          npm install
          CI=false npm run build  # CI 환경을 false로 설정하여 경고를 무시

      # 4. 서버에 빌드 파일 배포
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      # 5. 서버 상태 확인 (로그 확인 및 프로세스 상태 점검)
      - name: Check Server Status and Logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 현재 실행 중인 Node.js 서버 확인
            echo "Checking running Node.js processes..."
            forever list
            
            # Nginx 에러 로그 출력 (최근 20줄)
            echo "Fetching Nginx error log..."
            sudo tail -n 20 /var/log/nginx/error.log
            
            # Node.js 로그 출력 (파일 위치 확인 필요)
            echo "Fetching Node.js server log..."
            sudo tail -n 20 /home/ubuntu/Front/server.log  # 실제 로그 경로에 맞춰 변경 필요

      # 6. 서버 재시작 및 Nginx 캐시 무효화
      - name: Restart server and apply new build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            forever stopall || true
            sudo systemctl stop nginx
            npm install
            sudo rm -rf /var/cache/nginx/*
            forever start -c "node server.js" .
            sudo systemctl restart nginx
